var clean       = require('gulp-clean');
var concat      = require('gulp-concat');
var gulp        = require('gulp');
var gulpIf      = require('gulp-if');
var htmlMin     = require('gulp-htmlmin');
var prefixer    = require('gulp-autoprefixer');
var sass        = require('gulp-sass');
var runSequence = require('run-sequence');
var uglify      = require('gulp-uglify');
var notify      = require("gulp-notify");
var plumber     = require('gulp-plumber');

/**
 * Compila arquivos para produção com a flag --prod
 */
var args = require('yargs')
	.default('prod', false)
	.argv;

/**
 * Limpa diretórios de produção
 */
gulp.task('clean', function() {
	var src = [
		'./public/assets/',
		'./storage/smarty/templates'
	];

	return gulp.src(src)
	.pipe(clean());
});

/**
 * Minifica e concatena arquivos Javascript
 */
gulp.task('scripts', function() {
	var src = [
		'./bower_components/jquery/dist/jquery.js',
		'./bower_components/jquery.maskedinput/dist/jquery.maskedinput.js',
		'./resources/assets/js/*.js'
	];

	return gulp.src(src)
	.pipe(plumber({errorHandler: notify.onError("Error: <%= error.message %>")}))
	.pipe(gulpIf(args.prod, uglify()))
	.pipe(concat('app.js'))
	.pipe(notify("Found file: <%= file.relative %>!"))
	.pipe(gulp.dest('./public/assets/js/'));
});

/**
 * Minifica os templates HTML
 */
gulp.task('html', function() {
	return gulp.src('./resources/views/templates/**/*.tpl')
	.pipe(gulpIf(args.prod, htmlMin({
		collapseWhitespace: true,
		includeAutoGeneratedTags: false,
		removeComments: true
	})))
	.pipe(gulp.dest('./storage/smarty/templates'));
});

/**
 * Compila os arquivos SASS
 */
gulp.task('styles', function () {
	return gulp.src('./resources/assets/scss/*.scss')
	.pipe(plumber({errorHandler: notify.onError("Error: <%= error.message %>")}))
	.pipe(sass({
		outputStyle: 'compressed'
	}))
	.pipe(prefixer({
		versions: ['last 2 browsers']
	}))
	.pipe(notify("Found file: <%= file.relative %>!"))
	.pipe(gulp.dest('./public/assets/css'));
});


//------------------------------------------------------------
// Watches
//------------------------------------------------------------

/**
 * SASS Watch
 */
gulp.task('watchStyles', function() {
	return gulp.watch('./resources/assets/scss/**/*.scss', ['styles'])
		.on('change', function(event) {
			console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');
		});
});

/**
 * JS Watch
 */
gulp.task('watchScripts', function() {
	return gulp.watch('./resources/assets/js/*.js', ['scripts'])
		.on('change', function(event) {
			console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');
		});
});

/**
 * HTML Watch
 */
gulp.task('watchHtml', function() {
	return gulp.watch('./resources/views/templates/**/*.tpl', ['html'])
		.on('change', function(event) {
			console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');
		});
});


//------------------------------------------------------------
// Multi tasks
//------------------------------------------------------------

/**
 * Roda todas as tasks principais
 */
gulp.task('default', function(callback) {
	return runSequence('clean', ['styles', 'scripts', 'html'], callback);
});

/**
 * Watch tasks
 */
gulp.task('watch', function(callback) {
	return runSequence('watchStyles', 'watchScripts', 'watchHtml', callback);
});
